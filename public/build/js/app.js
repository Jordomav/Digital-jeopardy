!function(){"use strict";angular.module("jeopardyApp",["ngTouch"])}(),function(){"use strict";angular.module("jeopardyApp").controller("jeopardyController",["$http","Jeopardy",function(e,t){function o(){t.init().then(function(){a.gameData=t.gameData,n()})}function n(){_.forEach(a.gameData.categories,function(e){e.questions=[];var t=100,o=1;_.forEach(a.gameData.questions,function(n){n.category_id===e._id&&(n.money=t*o,e.questions.push(n),o++)}),a.categories.push(e)}),console.log(a.categories)}console.log("called");var a=this;a.gameData=[],a.categories=[],o(),a.selectQuestion=function(e){a.selectedQuestion=e,t.selectQuestion(e)},a.toggleShowAnswer=function(){a.selectedQuestion.showAnswer=!a.selectedQuestion.showAnswer},a.returnToGameboard=function(){t.returnToGameboard()}}])}(),function(){"use strict";angular.module("jeopardyApp").service("Jeopardy",["$http",function(e){function t(){return e.get("get-categories")}var o=this;o.gameData=[],o.init=function(){return t().then(function(e){o.gameData=e.data},function(e){alert("There was an error retrieving game data."),console.log(e)})},o.selectQuestion=function(e){e.selected=!0,Custombox.open({target:"#modal",effect:"push"})},o.returnToGameboard=function(){Custombox.close()}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplb3BhcmR5LmFwcC5qcyIsImplb3BhcmR5L2plb3BhcmR5LmNvbnRyb2xsZXIuanMiLCJqZW9wYXJkeS9qZW9wYXJkeS5zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJGh0dHAiLCJKZW9wYXJkeSIsInJlbmRlckdhbWVib2FyZCIsImluaXQiLCJ0aGVuIiwidm0iLCJnYW1lRGF0YSIsInBvcHVsYXRlQ2F0ZWdvcmllcyIsIl8iLCJmb3JFYWNoIiwiY2F0ZWdvcmllcyIsImNhdGVnb3J5IiwicXVlc3Rpb25zIiwibW9uZXkiLCJpIiwicXVlc3Rpb24iLCJjYXRlZ29yeV9pZCIsIl9pZCIsInB1c2giLCJjb25zb2xlIiwibG9nIiwidGhpcyIsInNlbGVjdFF1ZXN0aW9uIiwic2VsZWN0ZWRRdWVzdGlvbiIsInRvZ2dsZVNob3dBbnN3ZXIiLCJzaG93QW5zd2VyIiwicmV0dXJuVG9HYW1lYm9hcmQiLCJzZXJ2aWNlIiwiZ2V0R2FtZURhdGEiLCJnZXQiLCJyZXMiLCJkYXRhIiwiZXJyIiwiYWxlcnQiLCJzZWxlY3RlZCIsIkN1c3RvbWJveCIsIm9wZW4iLCJ0YXJnZXQiLCJlZmZlY3QiLCJjbG9zZSJdLCJtYXBwaW5ncyI6IkNBQUEsV0FFQSxZQUVBQSxTQUFBQyxPQUFBLGVBQUEsZUNIQSxXQUVBLFlBRUFELFNBQUFDLE9BQUEsZUFDQUMsV0FBQSxzQkFBQSxRQUFBLFdBQUEsU0FBQUMsRUFBQUMsR0FXQSxRQUFBQyxLQUNBRCxFQUFBRSxPQUNBQyxLQUFBLFdBQ0FDLEVBQUFDLFNBQUFMLEVBQUFLLFNBQ0FDLE1BTUEsUUFBQUEsS0FFQUMsRUFBQUMsUUFBQUosRUFBQUMsU0FBQUksV0FBQSxTQUFBQyxHQUVBQSxFQUFBQyxZQUNBLElBQUFDLEdBQUEsSUFDQUMsRUFBQSxDQUVBTixHQUFBQyxRQUFBSixFQUFBQyxTQUFBTSxVQUFBLFNBQUFHLEdBRUFBLEVBQUFDLGNBQUFMLEVBQUFNLE1BR0FGLEVBQUFGLE1BQUFBLEVBQUFDLEVBRUFILEVBQUFDLFVBQUFNLEtBQUFILEdBQ0FELE9BSUFULEVBQUFLLFdBQUFRLEtBQUFQLEtBRUFRLFFBQUFDLElBQUFmLEVBQUFLLFlBekNBUyxRQUFBQyxJQUFBLFNBRUEsSUFBQWYsR0FBQWdCLElBRUFoQixHQUFBQyxZQUNBRCxFQUFBSyxjQUVBUixJQXFDQUcsRUFBQWlCLGVBQUEsU0FBQVAsR0FDQVYsRUFBQWtCLGlCQUFBUixFQUNBZCxFQUFBcUIsZUFBQVAsSUFHQVYsRUFBQW1CLGlCQUFBLFdBQ0FuQixFQUFBa0IsaUJBQUFFLFlBQUFwQixFQUFBa0IsaUJBQUEsWUFHQWxCLEVBQUFxQixrQkFBQSxXQUNBekIsRUFBQXlCLDJCQzFEQSxXQUVBLFlBRUE3QixTQUFBQyxPQUFBLGVBQ0E2QixRQUFBLFlBQUEsUUFBQSxTQUFBM0IsR0FpQkEsUUFBQTRCLEtBQ0EsTUFBQTVCLEdBQUE2QixJQUFBLGtCQWhCQSxHQUFBeEIsR0FBQWdCLElBRUFoQixHQUFBQyxZQUVBRCxFQUFBRixLQUFBLFdBQ0EsTUFBQXlCLEtBQ0F4QixLQUFBLFNBQUEwQixHQUNBekIsRUFBQUMsU0FBQXdCLEVBQUFDLE1BRUEsU0FBQUMsR0FDQUMsTUFBQSw0Q0FDQWQsUUFBQUMsSUFBQVksTUFTQTNCLEVBQUFpQixlQUFBLFNBQUFQLEdBQ0FBLEVBQUFtQixVQUFBLEVBRUFDLFVBQUFDLE1BQ0FDLE9BQUEsU0FDQUMsT0FBQSxVQUlBakMsRUFBQXFCLGtCQUFBLFdBQ0FTLFVBQUFJIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpXHJcbntcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnamVvcGFyZHlBcHAnLCBbJ25nVG91Y2gnXSk7XHJcblxyXG59KCkpOyIsIlxyXG4oZnVuY3Rpb24oKVxyXG57XHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2plb3BhcmR5QXBwJylcclxuICAgICAgICAuY29udHJvbGxlcignamVvcGFyZHlDb250cm9sbGVyJywgZnVuY3Rpb24oJGh0dHAsIEplb3BhcmR5KXtcclxuXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjYWxsZWQnKTtcclxuXHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICB2bS5nYW1lRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICB2bS5jYXRlZ29yaWVzID0gW107XHJcblxyXG4gICAgICAgICAgICByZW5kZXJHYW1lYm9hcmQoKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlbmRlckdhbWVib2FyZCgpIHtcclxuICAgICAgICAgICAgICAgIEplb3BhcmR5LmluaXQoKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLmdhbWVEYXRhID0gSmVvcGFyZHkuZ2FtZURhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVsYXRlQ2F0ZWdvcmllcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBOZXN0IFF1ZXN0aW9ucyBpbnNpZGUgb2YgdGhlaXIgYXNzb2NpYXRlZCBjYXRlZ29yaWVzIHNvIHRoYXQgd2UgaGF2ZSBhIG1vcmUgaW50ZWxsaWdpYmxlIG9iamVjdCB0b1xyXG4gICAgICAgICAgICAvLyB1c2UgaW4gb3VyIHZpZXcuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHBvcHVsYXRlQ2F0ZWdvcmllcygpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBfLmZvckVhY2goIHZtLmdhbWVEYXRhLmNhdGVnb3JpZXMsIGZ1bmN0aW9uIChjYXRlZ29yeSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeS5xdWVzdGlvbnMgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbW9uZXkgPSAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGkgPSAxO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBfLmZvckVhY2godm0uZ2FtZURhdGEucXVlc3Rpb25zLCBmdW5jdGlvbiAocXVlc3Rpb24pIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdWVzdGlvbi5jYXRlZ29yeV9pZCA9PT0gY2F0ZWdvcnkuX2lkKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9Bc3NpZ24gbW9uZXRhcnkgdmFsdWUgdG8gZWFjaCBxdWVzdGlvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb24ubW9uZXkgPSAobW9uZXkgKiBpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeS5xdWVzdGlvbnMucHVzaChxdWVzdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdm0uY2F0ZWdvcmllcy5wdXNoKGNhdGVnb3J5KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codm0uY2F0ZWdvcmllcyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZtLnNlbGVjdFF1ZXN0aW9uID0gZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB2bS5zZWxlY3RlZFF1ZXN0aW9uID0gcXVlc3Rpb247XHJcbiAgICAgICAgICAgICAgICBKZW9wYXJkeS5zZWxlY3RRdWVzdGlvbihxdWVzdGlvbik7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2bS50b2dnbGVTaG93QW5zd2VyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdm0uc2VsZWN0ZWRRdWVzdGlvbi5zaG93QW5zd2VyID0gISh2bS5zZWxlY3RlZFF1ZXN0aW9uLnNob3dBbnN3ZXIpO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0ucmV0dXJuVG9HYW1lYm9hcmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBKZW9wYXJkeS5yZXR1cm5Ub0dhbWVib2FyZCgpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG5cclxufSgpKTsiLCIvKipcclxuICogQ3JlYXRlZCBieSBOZWlsIFN0cmFpbiBvbiA0LzI4LzIwMTYuXHJcbiAqL1xyXG5cclxuKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2plb3BhcmR5QXBwJylcclxuICAgICAgICAuc2VydmljZSgnSmVvcGFyZHknLCBmdW5jdGlvbiAoJGh0dHApIHtcclxuXHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcblxyXG4gICAgICAgICAgICB2bS5nYW1lRGF0YSA9IFtdO1xyXG5cclxuICAgICAgICAgICAgdm0uaW5pdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBnZXRHYW1lRGF0YSgpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gc3VjY2Vzc0NhbGxiYWNrKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5nYW1lRGF0YSA9IHJlcy5kYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGVycm9yQ2FsbGJhY2soZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbGVydCgnVGhlcmUgd2FzIGFuIGVycm9yIHJldHJpZXZpbmcgZ2FtZSBkYXRhLicpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRHYW1lRGF0YSgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2dldC1jYXRlZ29yaWVzJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICAgICB2bS5zZWxlY3RRdWVzdGlvbiA9IGZ1bmN0aW9uIChxdWVzdGlvbikge1xyXG4gICAgICAgICAgICAgICAgcXVlc3Rpb24uc2VsZWN0ZWQgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgICAgIEN1c3RvbWJveC5vcGVuKHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6ICcjbW9kYWwnLFxyXG4gICAgICAgICAgICAgICAgICAgIGVmZmVjdDogJ3B1c2gnXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZtLnJldHVyblRvR2FtZWJvYXJkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgQ3VzdG9tYm94LmNsb3NlKCk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbn0oKSk7XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
