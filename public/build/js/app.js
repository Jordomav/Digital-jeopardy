!function(){"use strict";angular.module("jeopardyApp",["ngTouch"])}(),function(){"use strict";angular.module("jeopardyApp").controller("adminController",function(){var e=this;e.questionType=null,e.setQuestionType=function(t){e.questionType=t},e.getQuestionType=function(t){return e.questionType?e.questionType:(t&&(console.log(t),t=JSON.parse(t),_.has(t,"question")?e.questionType="text":_.has(t,"image")&&(e.questionType="image")),"text")}})}(),function(){"use strict";angular.module("jeopardyApp").controller("buzzerController",["$scope","$http","$timeout",function(e,t,n){var o=this;o.allPlayersWhoBuzzed=[],o.firstPlayerWhoBuzzed=null,o.thisPlayer=null;var a=!0;o.pusher=new Pusher("4792c6294d140acf74ba"),o.pusherChannel=o.pusher.subscribe("buzzer-channel"),o.pusherChannel.bind("App\\Events\\PlayerHitBuzzer",function(e){a=!1,console.log(parseInt(e.user.updated_at)),o.allPlayersWhoBuzzed.push(e.user)}),o.buttonDisabled=function(e){return o.thisPlayer=JSON.parse(e),a?void 0:o.allPlayersWhoBuzzed!==o.thisPlayer},o.broadcastToAllPlayersInGame=function(){t.get("buzz")},o.enabledness=function(e){return o.buttonDisabled(e)?"buzzer-disabled":void 0},o.getFirstPlayerWhoBuzzedIn=function(){var e=Number.POSITIVE_INFINITY;console.log(e);var t=null;_.each(o.allPlayersWhoBuzzed,function(n){console.log(n);var o=parseInt(n.last_buzz.slice(n.last_buzz.length-6));console.log(o),e>o&&(e=n),t=n}),o.firstPlayerWhoBuzzed=t,console.log(t)}}])}(),function(){"use strict";angular.module("jeopardyApp").controller("jeopardyController",["$http","Jeopardy",function(e,t){function n(){t.init().then(function(){a.gameData=t.gameData,o()})}function o(){_.forEach(a.gameData.categories,function(e){e.questions=[];var t=100,n=1;_.forEach(a.gameData.questions,function(o){o.category_id===e._id&&(o.money=t*n,e.questions.push(o),n++)}),a.categories.push(e)}),console.log(a.categories)}var a=this;a.testing="hi hi hi",a.gameData=[],a.categories=[],n(),a.selectQuestion=function(e){a.selectedQuestion=e,t.selectQuestion(e)},a.toggleShowAnswer=function(){a.selectedQuestion.showAnswer=!a.selectedQuestion.showAnswer},a.returnToGameboard=function(){t.returnToGameboard()},a.buttonClick=function(){console.log("Hello")}}])}(),function(){"use strict";angular.module("jeopardyApp").service("Jeopardy",["$http",function(e){function t(){return e.get("get-categories")}var n=this;n.gameData=[],n.init=function(){return t().then(function(e){n.gameData=e.data},function(e){alert("There was an error retrieving game data."),console.log(e)})},n.selectQuestion=function(e){e.selected=!0,Custombox.open({target:"#modal",effect:"push"})},n.returnToGameboard=function(){Custombox.close()}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplb3BhcmR5LmFwcC5qcyIsImFkbWluL2FkbWluLmNvbnRyb2xsZXIuanMiLCJidXp6ZXIvYnV6emVyLmNvbnRyb2xsZXIuanMiLCJqZW9wYXJkeS9qZW9wYXJkeS5jb250cm9sbGVyLmpzIiwiamVvcGFyZHkvamVvcGFyZHkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsInZtIiwidGhpcyIsInF1ZXN0aW9uVHlwZSIsInNldFF1ZXN0aW9uVHlwZSIsInR5cGUiLCJnZXRRdWVzdGlvblR5cGUiLCJxdWVzdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJKU09OIiwicGFyc2UiLCJfIiwiaGFzIiwiJHNjb3BlIiwiJGh0dHAiLCIkdGltZW91dCIsImFsbFBsYXllcnNXaG9CdXp6ZWQiLCJmaXJzdFBsYXllcldob0J1enplZCIsInRoaXNQbGF5ZXIiLCJyZXNldEFsbEJ1enplcnMiLCJwdXNoZXIiLCJQdXNoZXIiLCJwdXNoZXJDaGFubmVsIiwic3Vic2NyaWJlIiwiYmluZCIsImJ1enpFdmVudCIsInBhcnNlSW50IiwidXNlciIsInVwZGF0ZWRfYXQiLCJwdXNoIiwiYnV0dG9uRGlzYWJsZWQiLCJjdXJyZW50VXNlciIsImJyb2FkY2FzdFRvQWxsUGxheWVyc0luR2FtZSIsImdldCIsImVuYWJsZWRuZXNzIiwiZ2V0Rmlyc3RQbGF5ZXJXaG9CdXp6ZWRJbiIsIm1pbiIsIk51bWJlciIsIlBPU0lUSVZFX0lORklOSVRZIiwiZWFjaCIsInBsYXllciIsInRpbWVzdGFtcCIsImxhc3RfYnV6eiIsInNsaWNlIiwibGVuZ3RoIiwiSmVvcGFyZHkiLCJyZW5kZXJHYW1lYm9hcmQiLCJpbml0IiwidGhlbiIsImdhbWVEYXRhIiwicG9wdWxhdGVDYXRlZ29yaWVzIiwiZm9yRWFjaCIsImNhdGVnb3JpZXMiLCJjYXRlZ29yeSIsInF1ZXN0aW9ucyIsIm1vbmV5IiwiaSIsImNhdGVnb3J5X2lkIiwiX2lkIiwidGVzdGluZyIsInNlbGVjdFF1ZXN0aW9uIiwic2VsZWN0ZWRRdWVzdGlvbiIsInRvZ2dsZVNob3dBbnN3ZXIiLCJzaG93QW5zd2VyIiwicmV0dXJuVG9HYW1lYm9hcmQiLCJidXR0b25DbGljayIsInNlcnZpY2UiLCJnZXRHYW1lRGF0YSIsInJlcyIsImRhdGEiLCJlcnIiLCJhbGVydCIsInNlbGVjdGVkIiwiQ3VzdG9tYm94Iiwib3BlbiIsInRhcmdldCIsImVmZmVjdCIsImNsb3NlIl0sIm1hcHBpbmdzIjoiQ0FBQSxXQUVBLFlBRUFBLFNBQUFDLE9BQUEsZUFBQSxlQ0pBLFdBRUEsWUFFQUQsU0FBQUMsT0FBQSxlQUNBQyxXQUFBLGtCQUFBLFdBRUEsR0FBQUMsR0FBQUMsSUFFQUQsR0FBQUUsYUFBQSxLQUVBRixFQUFBRyxnQkFBQSxTQUFBQyxHQUNBSixFQUFBRSxhQUFBRSxHQUdBSixFQUFBSyxnQkFBQSxTQUFBQyxHQUVBLE1BQUFOLEdBQUFFLGFBQ0FGLEVBQUFFLGNBR0FJLElBQ0FDLFFBQUFDLElBQUFGLEdBQ0FBLEVBQUFHLEtBQUFDLE1BQUFKLEdBQ0FLLEVBQUFDLElBQUFOLEVBQUEsWUFDQU4sRUFBQUUsYUFBQSxPQUNBUyxFQUFBQyxJQUFBTixFQUFBLFdBQ0FOLEVBQUFFLGFBQUEsVUFJQSxjQzlCQSxXQUVBLFlBRUFMLFNBQUFDLE9BQUEsZUFDQUMsV0FBQSxvQkFBQSxTQUFBLFFBQUEsV0FBQSxTQUFBYyxFQUFBQyxFQUFBQyxHQUVBLEdBQUFmLEdBQUFDLElBQ0FELEdBQUFnQix1QkFDQWhCLEVBQUFpQixxQkFBQSxLQUVBakIsRUFBQWtCLFdBQUEsSUFJQSxJQUFBQyxJQUFBLENBRUFuQixHQUFBb0IsT0FBQSxHQUFBQyxRQUFBLHdCQUNBckIsRUFBQXNCLGNBQUF0QixFQUFBb0IsT0FBQUcsVUFBQSxrQkFFQXZCLEVBQUFzQixjQUFBRSxLQUFBLCtCQUFBLFNBQUFDLEdBRUFOLEdBQUEsRUFFQVosUUFBQUMsSUFBQWtCLFNBQUFELEVBQUFFLEtBQUFDLGFBRUE1QixFQUFBZ0Isb0JBQUFhLEtBQUFKLEVBQUFFLFFBR0EzQixFQUFBOEIsZUFBQSxTQUFBQyxHQUdBLE1BRkEvQixHQUFBa0IsV0FBQVQsS0FBQUMsTUFBQXFCLEdBRUFaLEVBQUEsT0FDQW5CLEVBQUFnQixzQkFBQWhCLEVBQUFrQixZQUlBbEIsRUFBQWdDLDRCQUFBLFdBQ0FsQixFQUFBbUIsSUFBQSxTQUdBakMsRUFBQWtDLFlBQUEsU0FBQUgsR0FDQSxNQUFBL0IsR0FBQThCLGVBQUFDLEdBQ0Esa0JBREEsUUFLQS9CLEVBQUFtQywwQkFBQSxXQUNBLEdBQUFDLEdBQUFDLE9BQUFDLGlCQUNBL0IsU0FBQUMsSUFBQTRCLEVBRUEsSUFBQW5CLEdBQUEsSUFFQU4sR0FBQTRCLEtBQUF2QyxFQUFBZ0Isb0JBQUEsU0FBQXdCLEdBQ0FqQyxRQUFBQyxJQUFBZ0MsRUFDQSxJQUFBQyxHQUFBZixTQUFBYyxFQUFBRSxVQUFBQyxNQUFBSCxFQUFBRSxVQUFBRSxPQUFBLEdBQ0FyQyxTQUFBQyxJQUFBaUMsR0FDQUwsRUFBQUssSUFDQUwsRUFBQUksR0FDQXZCLEVBQUF1QixJQUVBeEMsRUFBQWlCLHFCQUFBQSxFQUNBVixRQUFBQyxJQUFBUyxVQzlEQSxXQUVBLFlBRUFwQixTQUFBQyxPQUFBLGVBQ0FDLFdBQUEsc0JBQUEsUUFBQSxXQUFBLFNBQUFlLEVBQUErQixHQVdBLFFBQUFDLEtBQ0FELEVBQUFFLE9BQ0FDLEtBQUEsV0FDQWhELEVBQUFpRCxTQUFBSixFQUFBSSxTQUNBQyxNQU1BLFFBQUFBLEtBRUF2QyxFQUFBd0MsUUFBQW5ELEVBQUFpRCxTQUFBRyxXQUFBLFNBQUFDLEdBRUFBLEVBQUFDLFlBQ0EsSUFBQUMsR0FBQSxJQUNBQyxFQUFBLENBRUE3QyxHQUFBd0MsUUFBQW5ELEVBQUFpRCxTQUFBSyxVQUFBLFNBQUFoRCxHQUVBQSxFQUFBbUQsY0FBQUosRUFBQUssTUFHQXBELEVBQUFpRCxNQUFBQSxFQUFBQyxFQUVBSCxFQUFBQyxVQUFBekIsS0FBQXZCLEdBQ0FrRCxPQUlBeEQsRUFBQW9ELFdBQUF2QixLQUFBd0IsS0FFQTlDLFFBQUFDLElBQUFSLEVBQUFvRCxZQXpDQSxHQUFBcEQsR0FBQUMsSUFFQUQsR0FBQTJELFFBQUEsV0FFQTNELEVBQUFpRCxZQUNBakQsRUFBQW9ELGNBRUFOLElBcUNBOUMsRUFBQTRELGVBQUEsU0FBQXRELEdBQ0FOLEVBQUE2RCxpQkFBQXZELEVBQ0F1QyxFQUFBZSxlQUFBdEQsSUFHQU4sRUFBQThELGlCQUFBLFdBQ0E5RCxFQUFBNkQsaUJBQUFFLFlBQUEvRCxFQUFBNkQsaUJBQUEsWUFHQTdELEVBQUFnRSxrQkFBQSxXQUNBbkIsRUFBQW1CLHFCQUdBaEUsRUFBQWlFLFlBQUEsV0FDQTFELFFBQUFDLElBQUEsZ0JDOURBLFdBRUEsWUFFQVgsU0FBQUMsT0FBQSxlQUNBb0UsUUFBQSxZQUFBLFFBQUEsU0FBQXBELEdBaUJBLFFBQUFxRCxLQUNBLE1BQUFyRCxHQUFBbUIsSUFBQSxrQkFoQkEsR0FBQWpDLEdBQUFDLElBRUFELEdBQUFpRCxZQUVBakQsRUFBQStDLEtBQUEsV0FDQSxNQUFBb0IsS0FDQW5CLEtBQUEsU0FBQW9CLEdBQ0FwRSxFQUFBaUQsU0FBQW1CLEVBQUFDLE1BRUEsU0FBQUMsR0FDQUMsTUFBQSw0Q0FDQWhFLFFBQUFDLElBQUE4RCxNQVNBdEUsRUFBQTRELGVBQUEsU0FBQXRELEdBQ0FBLEVBQUFrRSxVQUFBLEVBRUFDLFVBQUFDLE1BQ0FDLE9BQUEsU0FDQUMsT0FBQSxVQUlBNUUsRUFBQWdFLGtCQUFBLFdBQ0FTLFVBQUFJIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpXHJcbntcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnamVvcGFyZHlBcHAnLCBbJ25nVG91Y2gnXSk7XHJcblxyXG59KCkpOyIsIihmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdqZW9wYXJkeUFwcCcpXHJcbiAgICAgICAgLmNvbnRyb2xsZXIoJ2FkbWluQ29udHJvbGxlcicsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2bS5xdWVzdGlvblR5cGUgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgdm0uc2V0UXVlc3Rpb25UeXBlID0gZnVuY3Rpb24gKHR5cGUpIHtcclxuICAgICAgICAgICAgICAgIHZtLnF1ZXN0aW9uVHlwZSA9IHR5cGU7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2bS5nZXRRdWVzdGlvblR5cGUgPSBmdW5jdGlvbiAocXVlc3Rpb24pIHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodm0ucXVlc3Rpb25UeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZtLnF1ZXN0aW9uVHlwZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocXVlc3Rpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb24gPSBKU09OLnBhcnNlKHF1ZXN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoXy5oYXMocXVlc3Rpb24sICdxdWVzdGlvbicpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLnF1ZXN0aW9uVHlwZSA9ICd0ZXh0JztcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF8uaGFzKHF1ZXN0aW9uLCAnaW1hZ2UnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5xdWVzdGlvblR5cGUgPSAnaW1hZ2UnO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3RleHQnO1xyXG5cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxuXHJcblxyXG59KCkpO1xyXG4iLCJcclxuKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2plb3BhcmR5QXBwJylcclxuICAgICAgICAuY29udHJvbGxlcignYnV6emVyQ29udHJvbGxlcicsIGZ1bmN0aW9uICgkc2NvcGUsICRodHRwLCAkdGltZW91dCkge1xyXG5cclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdm0uYWxsUGxheWVyc1dob0J1enplZCA9IFtdO1xyXG4gICAgICAgICAgICB2bS5maXJzdFBsYXllcldob0J1enplZCA9IG51bGw7XHJcblxyXG4gICAgICAgICAgICB2bS50aGlzUGxheWVyID0gbnVsbDtcclxuXHJcbiAgICAgICAgICAgIC8vIFRPRE86IG1ha2UgaG9zdCBjb250cm9sbGVyIHRoYXQgcmVzZXRzIGJ1dHRvbiBmb3IgYWxsIHBsYXllcnMgKHdoZW4gcGxheWVyIGFuc3dlcnMgaW5jb3JyZWN0bHksIGFuZCBldmVyeVxyXG4gICAgICAgICAgICAvLyAodG9kbyBjb250Li4uKSB0aW1lIGEgbmV3IHF1ZXN0aW9uIGlzIHNlbGVjdGVkLlxyXG4gICAgICAgICAgICB2YXIgcmVzZXRBbGxCdXp6ZXJzID0gdHJ1ZTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZtLnB1c2hlciA9IG5ldyBQdXNoZXIoJzQ3OTJjNjI5NGQxNDBhY2Y3NGJhJyk7XHJcbiAgICAgICAgICAgIHZtLnB1c2hlckNoYW5uZWwgPSB2bS5wdXNoZXIuc3Vic2NyaWJlKCdidXp6ZXItY2hhbm5lbCcpO1xyXG5cclxuICAgICAgICAgICAgdm0ucHVzaGVyQ2hhbm5lbC5iaW5kKCdBcHBcXFxcRXZlbnRzXFxcXFBsYXllckhpdEJ1enplcicsIGZ1bmN0aW9uIChidXp6RXZlbnQpIHtcclxuXHJcbiAgICAgICAgICAgICAgICByZXNldEFsbEJ1enplcnMgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwYXJzZUludChidXp6RXZlbnQudXNlci51cGRhdGVkX2F0KSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdm0uYWxsUGxheWVyc1dob0J1enplZC5wdXNoKGJ1enpFdmVudC51c2VyKTtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICB2bS5idXR0b25EaXNhYmxlZCA9IGZ1bmN0aW9uIChjdXJyZW50VXNlcikge1xyXG4gICAgICAgICAgICAgICAgdm0udGhpc1BsYXllciA9IEpTT04ucGFyc2UoY3VycmVudFVzZXIpO1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICggIXJlc2V0QWxsQnV6emVycyApIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdm0uYWxsUGxheWVyc1dob0J1enplZCAhPT0gdm0udGhpc1BsYXllcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZtLmJyb2FkY2FzdFRvQWxsUGxheWVyc0luR2FtZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICRodHRwLmdldCgnYnV6eicpO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0uZW5hYmxlZG5lc3MgPSBmdW5jdGlvbiAoY3VycmVudFVzZXIpIHtcclxuICAgICAgICAgICAgICAgIGlmICh2bS5idXR0b25EaXNhYmxlZChjdXJyZW50VXNlcikpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ2J1enplci1kaXNhYmxlZCc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2bS5nZXRGaXJzdFBsYXllcldob0J1enplZEluID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1pbiA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKG1pbik7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGZpcnN0UGxheWVyV2hvQnV6emVkID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXy5lYWNoKHZtLmFsbFBsYXllcnNXaG9CdXp6ZWQsIGZ1bmN0aW9uIChwbGF5ZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwbGF5ZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0aW1lc3RhbXAgPSBwYXJzZUludChwbGF5ZXIubGFzdF9idXp6LnNsaWNlKHBsYXllci5sYXN0X2J1enoubGVuZ3RoIC0gNikpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRpbWVzdGFtcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRpbWVzdGFtcCA8IG1pbilcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWluID0gcGxheWVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaXJzdFBsYXllcldob0J1enplZCA9IHBsYXllcjtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgdm0uZmlyc3RQbGF5ZXJXaG9CdXp6ZWQgPSBmaXJzdFBsYXllcldob0J1enplZDtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGZpcnN0UGxheWVyV2hvQnV6emVkKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxufSgpKTtcclxuIiwiXHJcbihmdW5jdGlvbigpXHJcbntcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnamVvcGFyZHlBcHAnKVxyXG4gICAgICAgIC5jb250cm9sbGVyKCdqZW9wYXJkeUNvbnRyb2xsZXInLCBmdW5jdGlvbigkaHR0cCwgSmVvcGFyZHkpe1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHZtLnRlc3RpbmcgPSAnaGkgaGkgaGknO1xyXG5cclxuICAgICAgICAgICAgdm0uZ2FtZURhdGEgPSBbXTtcclxuICAgICAgICAgICAgdm0uY2F0ZWdvcmllcyA9IFtdO1xyXG5cclxuICAgICAgICAgICAgcmVuZGVyR2FtZWJvYXJkKCk7XHJcblxyXG4gICAgICAgICAgICBmdW5jdGlvbiByZW5kZXJHYW1lYm9hcmQoKSB7XHJcbiAgICAgICAgICAgICAgICBKZW9wYXJkeS5pbml0KClcclxuICAgICAgICAgICAgICAgICAgICAudGhlbiggZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5nYW1lRGF0YSA9IEplb3BhcmR5LmdhbWVEYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3B1bGF0ZUNhdGVnb3JpZXMoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gTmVzdCBRdWVzdGlvbnMgaW5zaWRlIG9mIHRoZWlyIGFzc29jaWF0ZWQgY2F0ZWdvcmllcyBzbyB0aGF0IHdlIGhhdmUgYSBtb3JlIGludGVsbGlnaWJsZSBvYmplY3QgdG9cclxuICAgICAgICAgICAgLy8gdXNlIGluIG91ciB2aWV3LlxyXG4gICAgICAgICAgICBmdW5jdGlvbiBwb3B1bGF0ZUNhdGVnb3JpZXMoKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgXy5mb3JFYWNoKCB2bS5nYW1lRGF0YS5jYXRlZ29yaWVzLCBmdW5jdGlvbiAoY2F0ZWdvcnkpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnkucXVlc3Rpb25zID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIG1vbmV5ID0gMTAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpID0gMTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgXy5mb3JFYWNoKHZtLmdhbWVEYXRhLnF1ZXN0aW9ucywgZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocXVlc3Rpb24uY2F0ZWdvcnlfaWQgPT09IGNhdGVnb3J5Ll9pZCkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vQXNzaWduIG1vbmV0YXJ5IHZhbHVlIHRvIGVhY2ggcXVlc3Rpb25cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uLm1vbmV5ID0gKG1vbmV5ICogaSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnkucXVlc3Rpb25zLnB1c2gocXVlc3Rpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaSsrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHZtLmNhdGVnb3JpZXMucHVzaChjYXRlZ29yeSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHZtLmNhdGVnb3JpZXMpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB2bS5zZWxlY3RRdWVzdGlvbiA9IGZ1bmN0aW9uIChxdWVzdGlvbikge1xyXG4gICAgICAgICAgICAgICAgdm0uc2VsZWN0ZWRRdWVzdGlvbiA9IHF1ZXN0aW9uO1xyXG4gICAgICAgICAgICAgICAgSmVvcGFyZHkuc2VsZWN0UXVlc3Rpb24ocXVlc3Rpb24pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0udG9nZ2xlU2hvd0Fuc3dlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZtLnNlbGVjdGVkUXVlc3Rpb24uc2hvd0Fuc3dlciA9ICEodm0uc2VsZWN0ZWRRdWVzdGlvbi5zaG93QW5zd2VyKTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZtLnJldHVyblRvR2FtZWJvYXJkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgSmVvcGFyZHkucmV0dXJuVG9HYW1lYm9hcmQoKTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIHZtLmJ1dHRvbkNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0hlbGxvJyk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfSk7XHJcblxyXG59KCkpOyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IE5laWwgU3RyYWluIG9uIDQvMjgvMjAxNi5cclxuICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnamVvcGFyZHlBcHAnKVxyXG4gICAgICAgIC5zZXJ2aWNlKCdKZW9wYXJkeScsIGZ1bmN0aW9uICgkaHR0cCkge1xyXG5cclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuXHJcbiAgICAgICAgICAgIHZtLmdhbWVEYXRhID0gW107XHJcblxyXG4gICAgICAgICAgICB2bS5pbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldEdhbWVEYXRhKClcclxuICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiBzdWNjZXNzQ2FsbGJhY2socmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLmdhbWVEYXRhID0gcmVzLmRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gZXJyb3JDYWxsYmFjayhlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdUaGVyZSB3YXMgYW4gZXJyb3IgcmV0cmlldmluZyBnYW1lIGRhdGEuJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEdhbWVEYXRhKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuICRodHRwLmdldCgnZ2V0LWNhdGVnb3JpZXMnKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgICAgIHZtLnNlbGVjdFF1ZXN0aW9uID0gZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICBxdWVzdGlvbi5zZWxlY3RlZCA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICAgICAgQ3VzdG9tYm94Lm9wZW4oe1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldDogJyNtb2RhbCcsXHJcbiAgICAgICAgICAgICAgICAgICAgZWZmZWN0OiAncHVzaCdcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0ucmV0dXJuVG9HYW1lYm9hcmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBDdXN0b21ib3guY2xvc2UoKTtcclxuICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxufSgpKTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
