!function(){"use strict";angular.module("jeopardyApp",["ngTouch"])}(),function(){"use strict";angular.module("jeopardyApp").controller("adminController",function(){var e=this;e.questionType=null,e.setQuestionType=function(t){e.questionType=t,console.log(e.questionType)},e.getQuestionType=function(t){return e.questionType?e.questionType:(t=JSON.parse(t),void(_.has(t,"question")?e.questionType="text":_.has(t,"image")&&(e.questionType="image")))}})}(),function(){"use strict";angular.module("jeopardyApp").controller("jeopardyController",["$http","Jeopardy",function(e,t){function o(){t.init().then(function(){i.gameData=t.gameData,n()})}function n(){_.forEach(i.gameData.categories,function(e){e.questions=[];var t=100,o=1;_.forEach(i.gameData.questions,function(n){n.category_id===e._id&&(n.money=t*o,e.questions.push(n),o++)}),i.categories.push(e)}),console.log(i.categories)}var i=this;i.testing="hi hi hi",i.gameData=[],i.categories=[],o(),i.selectQuestion=function(e){i.selectedQuestion=e,t.selectQuestion(e)},i.toggleShowAnswer=function(){i.selectedQuestion.showAnswer=!i.selectedQuestion.showAnswer},i.returnToGameboard=function(){t.returnToGameboard()},i.buttonClick=function(){console.log("Hello")}}])}(),function(){"use strict";angular.module("jeopardyApp").service("Jeopardy",["$http",function(e){function t(){return e.get("get-categories")}var o=this;o.gameData=[],o.init=function(){return t().then(function(e){o.gameData=e.data},function(e){alert("There was an error retrieving game data."),console.log(e)})},o.selectQuestion=function(e){e.selected=!0,Custombox.open({target:"#modal",effect:"push"})},o.returnToGameboard=function(){Custombox.close()}}])}();
//# sourceMappingURL=data:application/json;base64,
