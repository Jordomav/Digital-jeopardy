!function(){"use strict";angular.module("jeopardyApp",["ngTouch"])}(),function(){"use strict";angular.module("jeopardyApp").controller("adminController",function(){var e=this;e.questionType=null,e.setQuestionType=function(t){e.questionType=t},e.getQuestionType=function(t){return e.questionType?e.questionType:(t&&(console.log(t),t=JSON.parse(t),_.has(t,"question")?e.questionType="text":_.has(t,"image")&&(e.questionType="image")),"text")}})}(),function(){"use strict";angular.module("jeopardyApp").controller("buzzerController",["$scope","$http","$timeout",function(e,t,n){var o=this;o.allPlayersWhoBuzzed=[],o.firstPlayerWhoBuzzed=null,o.pusher=new Pusher("4792c6294d140acf74ba"),o.pusherChannel=o.pusher.subscribe("buzzer-channel"),o.pusherChannel.bind("App\\Events\\PlayerHitBuzzer",function(t){o.allPlayersWhoBuzzed.push(t.user),o.disableBuzzer(),e.$apply()});o.disableBuzzer=function(){return o.allPlayersWhoBuzzed.length>0?!0:void 0},o.broadcastToAllPlayersInGame=function(){t.get("buzz")},o.enabledness=function(){return o.disableBuzzer()===!0?"buzzer-disabled":void 0},o.getFirstPlayerWhoBuzzedIn=function(){var e=Number.POSITIVE_INFINITY,t=null;o.allPlayersWhoBuzzed.length>1?(_.each(o.allPlayersWhoBuzzed,function(n){var o=parseInt(n.last_buzz.slice(n.last_buzz.length-12));e>o&&(e=n,t=n)}),o.firstPlayerWhoBuzzed=t):o.firstPlayerWhoBuzzed=o.allPlayersWhoBuzzed[0]}}])}(),function(){"use strict";angular.module("jeopardyApp").controller("jeopardyController",["$http","Jeopardy",function(e,t){function n(){t.init().then(function(){u.gameData=t.gameData,o()})}function o(){_.forEach(u.gameData.categories,function(e){e.questions=[];var t=100,n=1;_.forEach(u.gameData.questions,function(o){o.category_id===e._id&&(o.money=t*n,e.questions.push(o),n++)}),u.categories.push(e)}),console.log(u.categories)}var u=this;u.testing="hi hi hi",u.gameData=[],u.categories=[],n(),u.selectQuestion=function(e){u.selectedQuestion=e,t.selectQuestion(e)},u.toggleShowAnswer=function(){u.selectedQuestion.showAnswer=!u.selectedQuestion.showAnswer},u.returnToGameboard=function(){t.returnToGameboard()},u.buttonClick=function(){console.log("Hello")}}])}(),function(){"use strict";angular.module("jeopardyApp").service("Jeopardy",["$http",function(e){function t(){return e.get("get-categories")}var n=this;n.gameData=[],n.init=function(){return t().then(function(e){n.gameData=e.data},function(e){alert("There was an error retrieving game data."),console.log(e)})},n.selectQuestion=function(e){e.selected=!0,Custombox.open({target:"#modal",effect:"push"})},n.returnToGameboard=function(){Custombox.close()}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplb3BhcmR5LmFwcC5qcyIsImFkbWluL2FkbWluLmNvbnRyb2xsZXIuanMiLCJidXp6ZXIvYnV6emVyLmNvbnRyb2xsZXIuanMiLCJqZW9wYXJkeS9qZW9wYXJkeS5jb250cm9sbGVyLmpzIiwiamVvcGFyZHkvamVvcGFyZHkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsInZtIiwidGhpcyIsInF1ZXN0aW9uVHlwZSIsInNldFF1ZXN0aW9uVHlwZSIsInR5cGUiLCJnZXRRdWVzdGlvblR5cGUiLCJxdWVzdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJKU09OIiwicGFyc2UiLCJfIiwiaGFzIiwiJHNjb3BlIiwiJGh0dHAiLCIkdGltZW91dCIsImFsbFBsYXllcnNXaG9CdXp6ZWQiLCJmaXJzdFBsYXllcldob0J1enplZCIsInB1c2hlciIsIlB1c2hlciIsInB1c2hlckNoYW5uZWwiLCJzdWJzY3JpYmUiLCJiaW5kIiwiYnV6ekV2ZW50IiwicHVzaCIsInVzZXIiLCJkaXNhYmxlQnV6emVyIiwiJGFwcGx5IiwibGVuZ3RoIiwiYnJvYWRjYXN0VG9BbGxQbGF5ZXJzSW5HYW1lIiwiZ2V0IiwiZW5hYmxlZG5lc3MiLCJnZXRGaXJzdFBsYXllcldob0J1enplZEluIiwibWluIiwiTnVtYmVyIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJlYWNoIiwicGxheWVyIiwidGltZXN0YW1wIiwicGFyc2VJbnQiLCJsYXN0X2J1enoiLCJzbGljZSIsIkplb3BhcmR5IiwicmVuZGVyR2FtZWJvYXJkIiwiaW5pdCIsInRoZW4iLCJnYW1lRGF0YSIsInBvcHVsYXRlQ2F0ZWdvcmllcyIsImZvckVhY2giLCJjYXRlZ29yaWVzIiwiY2F0ZWdvcnkiLCJxdWVzdGlvbnMiLCJtb25leSIsImkiLCJjYXRlZ29yeV9pZCIsIl9pZCIsInRlc3RpbmciLCJzZWxlY3RRdWVzdGlvbiIsInNlbGVjdGVkUXVlc3Rpb24iLCJ0b2dnbGVTaG93QW5zd2VyIiwic2hvd0Fuc3dlciIsInJldHVyblRvR2FtZWJvYXJkIiwiYnV0dG9uQ2xpY2siLCJzZXJ2aWNlIiwiZ2V0R2FtZURhdGEiLCJyZXMiLCJkYXRhIiwiZXJyIiwiYWxlcnQiLCJzZWxlY3RlZCIsIkN1c3RvbWJveCIsIm9wZW4iLCJ0YXJnZXQiLCJlZmZlY3QiLCJjbG9zZSJdLCJtYXBwaW5ncyI6IkNBQUEsV0FFQSxZQUVBQSxTQUFBQyxPQUFBLGVBQUEsZUNKQSxXQUVBLFlBRUFELFNBQUFDLE9BQUEsZUFDQUMsV0FBQSxrQkFBQSxXQUVBLEdBQUFDLEdBQUFDLElBRUFELEdBQUFFLGFBQUEsS0FFQUYsRUFBQUcsZ0JBQUEsU0FBQUMsR0FDQUosRUFBQUUsYUFBQUUsR0FHQUosRUFBQUssZ0JBQUEsU0FBQUMsR0FFQSxNQUFBTixHQUFBRSxhQUNBRixFQUFBRSxjQUdBSSxJQUNBQyxRQUFBQyxJQUFBRixHQUNBQSxFQUFBRyxLQUFBQyxNQUFBSixHQUNBSyxFQUFBQyxJQUFBTixFQUFBLFlBQ0FOLEVBQUFFLGFBQUEsT0FDQVMsRUFBQUMsSUFBQU4sRUFBQSxXQUNBTixFQUFBRSxhQUFBLFVBSUEsY0M5QkEsV0FFQSxZQUVBTCxTQUFBQyxPQUFBLGVBQ0FDLFdBQUEsb0JBQUEsU0FBQSxRQUFBLFdBQUEsU0FBQWMsRUFBQUMsRUFBQUMsR0FFQSxHQUFBZixHQUFBQyxJQUNBRCxHQUFBZ0IsdUJBQ0FoQixFQUFBaUIscUJBQUEsS0FHQWpCLEVBQUFrQixPQUFBLEdBQUFDLFFBQUEsd0JBQ0FuQixFQUFBb0IsY0FBQXBCLEVBQUFrQixPQUFBRyxVQUFBLGtCQUVBckIsRUFBQW9CLGNBQUFFLEtBQUEsK0JBQUEsU0FBQUMsR0FFQXZCLEVBQUFnQixvQkFBQVEsS0FBQUQsRUFBQUUsTUFFQXpCLEVBQUEwQixnQkFDQWIsRUFBQWMsVUFRQTNCLEdBQUEwQixjQUFBLFdBQ0EsTUFBQTFCLEdBQUFnQixvQkFBQVksT0FBQSxHQUNBLEVBREEsUUFJQTVCLEVBQUE2Qiw0QkFBQSxXQUNBZixFQUFBZ0IsSUFBQSxTQUlBOUIsRUFBQStCLFlBQUEsV0FDQSxNQUFBL0IsR0FBQTBCLG1CQUFBLEVBQ0Esa0JBREEsUUFLQTFCLEVBQUFnQywwQkFBQSxXQUNBLEdBQUFDLEdBQUFDLE9BQUFDLGtCQUVBbEIsRUFBQSxJQUVBakIsR0FBQWdCLG9CQUFBWSxPQUFBLEdBQ0FqQixFQUFBeUIsS0FBQXBDLEVBQUFnQixvQkFBQSxTQUFBcUIsR0FDQSxHQUFBQyxHQUFBQyxTQUFBRixFQUFBRyxVQUFBQyxNQUFBSixFQUFBRyxVQUFBWixPQUFBLElBRUFLLEdBQUFLLElBQ0FMLEVBQUFJLEVBQ0FwQixFQUFBb0IsS0FHQXJDLEVBQUFpQixxQkFBQUEsR0FFQWpCLEVBQUFpQixxQkFBQWpCLEVBQUFnQixvQkFBQSxVQzVEQSxXQUVBLFlBRUFuQixTQUFBQyxPQUFBLGVBQ0FDLFdBQUEsc0JBQUEsUUFBQSxXQUFBLFNBQUFlLEVBQUE0QixHQVdBLFFBQUFDLEtBQ0FELEVBQUFFLE9BQ0FDLEtBQUEsV0FDQTdDLEVBQUE4QyxTQUFBSixFQUFBSSxTQUNBQyxNQU1BLFFBQUFBLEtBRUFwQyxFQUFBcUMsUUFBQWhELEVBQUE4QyxTQUFBRyxXQUFBLFNBQUFDLEdBRUFBLEVBQUFDLFlBQ0EsSUFBQUMsR0FBQSxJQUNBQyxFQUFBLENBRUExQyxHQUFBcUMsUUFBQWhELEVBQUE4QyxTQUFBSyxVQUFBLFNBQUE3QyxHQUVBQSxFQUFBZ0QsY0FBQUosRUFBQUssTUFHQWpELEVBQUE4QyxNQUFBQSxFQUFBQyxFQUVBSCxFQUFBQyxVQUFBM0IsS0FBQWxCLEdBQ0ErQyxPQUlBckQsRUFBQWlELFdBQUF6QixLQUFBMEIsS0FFQTNDLFFBQUFDLElBQUFSLEVBQUFpRCxZQXpDQSxHQUFBakQsR0FBQUMsSUFFQUQsR0FBQXdELFFBQUEsV0FFQXhELEVBQUE4QyxZQUNBOUMsRUFBQWlELGNBRUFOLElBcUNBM0MsRUFBQXlELGVBQUEsU0FBQW5ELEdBQ0FOLEVBQUEwRCxpQkFBQXBELEVBQ0FvQyxFQUFBZSxlQUFBbkQsSUFHQU4sRUFBQTJELGlCQUFBLFdBQ0EzRCxFQUFBMEQsaUJBQUFFLFlBQUE1RCxFQUFBMEQsaUJBQUEsWUFHQTFELEVBQUE2RCxrQkFBQSxXQUNBbkIsRUFBQW1CLHFCQUdBN0QsRUFBQThELFlBQUEsV0FDQXZELFFBQUFDLElBQUEsZ0JDOURBLFdBRUEsWUFFQVgsU0FBQUMsT0FBQSxlQUNBaUUsUUFBQSxZQUFBLFFBQUEsU0FBQWpELEdBaUJBLFFBQUFrRCxLQUNBLE1BQUFsRCxHQUFBZ0IsSUFBQSxrQkFoQkEsR0FBQTlCLEdBQUFDLElBRUFELEdBQUE4QyxZQUVBOUMsRUFBQTRDLEtBQUEsV0FDQSxNQUFBb0IsS0FDQW5CLEtBQUEsU0FBQW9CLEdBQ0FqRSxFQUFBOEMsU0FBQW1CLEVBQUFDLE1BRUEsU0FBQUMsR0FDQUMsTUFBQSw0Q0FDQTdELFFBQUFDLElBQUEyRCxNQVNBbkUsRUFBQXlELGVBQUEsU0FBQW5ELEdBQ0FBLEVBQUErRCxVQUFBLEVBRUFDLFVBQUFDLE1BQ0FDLE9BQUEsU0FDQUMsT0FBQSxVQUlBekUsRUFBQTZELGtCQUFBLFdBQ0FTLFVBQUFJIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpXHJcbntcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgnamVvcGFyZHlBcHAnLCBbJ25nVG91Y2gnXSk7XHJcblxyXG59KCkpOyIsIihmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdqZW9wYXJkeUFwcCcpXHJcbiAgICAgICAgLmNvbnRyb2xsZXIoJ2FkbWluQ29udHJvbGxlcicsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgIHZhciB2bSA9IHRoaXM7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2bS5xdWVzdGlvblR5cGUgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgdm0uc2V0UXVlc3Rpb25UeXBlID0gZnVuY3Rpb24gKHR5cGUpIHtcclxuICAgICAgICAgICAgICAgIHZtLnF1ZXN0aW9uVHlwZSA9IHR5cGU7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2bS5nZXRRdWVzdGlvblR5cGUgPSBmdW5jdGlvbiAocXVlc3Rpb24pIHtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodm0ucXVlc3Rpb25UeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZtLnF1ZXN0aW9uVHlwZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAocXVlc3Rpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb24gPSBKU09OLnBhcnNlKHF1ZXN0aW9uKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoXy5oYXMocXVlc3Rpb24sICdxdWVzdGlvbicpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLnF1ZXN0aW9uVHlwZSA9ICd0ZXh0JztcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF8uaGFzKHF1ZXN0aW9uLCAnaW1hZ2UnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2bS5xdWVzdGlvblR5cGUgPSAnaW1hZ2UnO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJ3RleHQnO1xyXG5cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxuXHJcblxyXG59KCkpO1xyXG4iLCJcclxuKGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAndXNlIHN0cmljdCc7XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ2plb3BhcmR5QXBwJylcclxuICAgICAgICAuY29udHJvbGxlcignYnV6emVyQ29udHJvbGxlcicsIGZ1bmN0aW9uICgkc2NvcGUsICRodHRwLCAkdGltZW91dCkge1xyXG5cclxuICAgICAgICAgICAgdmFyIHZtID0gdGhpcztcclxuICAgICAgICAgICAgdm0uYWxsUGxheWVyc1dob0J1enplZCA9IFtdO1xyXG4gICAgICAgICAgICB2bS5maXJzdFBsYXllcldob0J1enplZCA9IG51bGw7XHJcblxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdm0ucHVzaGVyID0gbmV3IFB1c2hlcignNDc5MmM2Mjk0ZDE0MGFjZjc0YmEnKTtcclxuICAgICAgICAgICAgdm0ucHVzaGVyQ2hhbm5lbCA9IHZtLnB1c2hlci5zdWJzY3JpYmUoJ2J1enplci1jaGFubmVsJyk7XHJcblxyXG4gICAgICAgICAgICB2bS5wdXNoZXJDaGFubmVsLmJpbmQoJ0FwcFxcXFxFdmVudHNcXFxcUGxheWVySGl0QnV6emVyJywgZnVuY3Rpb24gKGJ1enpFdmVudCkge1xyXG5cclxuICAgICAgICAgICAgICAgIHZtLmFsbFBsYXllcnNXaG9CdXp6ZWQucHVzaChidXp6RXZlbnQudXNlcik7XHJcblxyXG4gICAgICAgICAgICAgICAgdm0uZGlzYWJsZUJ1enplcigpO1xyXG4gICAgICAgICAgICAgICAgJHNjb3BlLiRhcHBseSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcblxyXG4gICAgICAgICAgICAvLyBUT0RPOiBtYWtlIGhvc3QgY29udHJvbGxlciB0aGF0IHJlc2V0cyBidXR0b24gZm9yIGFsbCBwbGF5ZXJzICh3aGVuIHBsYXllciBhbnN3ZXJzIGluY29ycmVjdGx5LCBhbmQgZXZlcnlcclxuICAgICAgICAgICAgLy8gKHRvZG8gY29udC4uLikgdGltZSBhIG5ldyBxdWVzdGlvbiBpcyBzZWxlY3RlZC5cclxuICAgICAgICAgICAgdmFyIHJlc2V0QWxsQnV6emVycyA9IGZ1bmN0aW9uKCl7fTtcclxuXHJcbiAgICAgICAgICAgIHZtLmRpc2FibGVCdXp6ZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodm0uYWxsUGxheWVyc1dob0J1enplZC5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0uYnJvYWRjYXN0VG9BbGxQbGF5ZXJzSW5HYW1lID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJGh0dHAuZ2V0KCdidXp6Jyk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAvLyBSZXR1cm5zIGNzcyBjbGFzcyBmb3IgZ3JheSBidXp6ZXIgdG8gbmctY2xhc3NcclxuICAgICAgICAgICAgdm0uZW5hYmxlZG5lc3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodm0uZGlzYWJsZUJ1enplcigpID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdidXp6ZXItZGlzYWJsZWQnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0uZ2V0Rmlyc3RQbGF5ZXJXaG9CdXp6ZWRJbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBtaW4gPSBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGZpcnN0UGxheWVyV2hvQnV6emVkID0gbnVsbDtcclxuXHJcbiAgICAgICAgICAgICAgICBpZih2bS5hbGxQbGF5ZXJzV2hvQnV6emVkLmxlbmd0aCA+IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBfLmVhY2godm0uYWxsUGxheWVyc1dob0J1enplZCwgZnVuY3Rpb24gKHBsYXllcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGltZXN0YW1wID0gcGFyc2VJbnQocGxheWVyLmxhc3RfYnV6ei5zbGljZShwbGF5ZXIubGFzdF9idXp6Lmxlbmd0aCAtIDEyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHBsYXllci5uYW1lICsgJzogJyArIHRpbWVzdGFtcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aW1lc3RhbXAgPCBtaW4pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbiA9IHBsYXllcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0UGxheWVyV2hvQnV6emVkID0gcGxheWVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uZmlyc3RQbGF5ZXJXaG9CdXp6ZWQgPSBmaXJzdFBsYXllcldob0J1enplZDtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdm0uZmlyc3RQbGF5ZXJXaG9CdXp6ZWQgPSB2bS5hbGxQbGF5ZXJzV2hvQnV6emVkWzBdO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG59KCkpO1xyXG4iLCJcclxuKGZ1bmN0aW9uKClcclxue1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdqZW9wYXJkeUFwcCcpXHJcbiAgICAgICAgLmNvbnRyb2xsZXIoJ2plb3BhcmR5Q29udHJvbGxlcicsIGZ1bmN0aW9uKCRodHRwLCBKZW9wYXJkeSl7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdm0udGVzdGluZyA9ICdoaSBoaSBoaSc7XHJcblxyXG4gICAgICAgICAgICB2bS5nYW1lRGF0YSA9IFtdO1xyXG4gICAgICAgICAgICB2bS5jYXRlZ29yaWVzID0gW107XHJcblxyXG4gICAgICAgICAgICByZW5kZXJHYW1lYm9hcmQoKTtcclxuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlbmRlckdhbWVib2FyZCgpIHtcclxuICAgICAgICAgICAgICAgIEplb3BhcmR5LmluaXQoKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZtLmdhbWVEYXRhID0gSmVvcGFyZHkuZ2FtZURhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcHVsYXRlQ2F0ZWdvcmllcygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBOZXN0IFF1ZXN0aW9ucyBpbnNpZGUgb2YgdGhlaXIgYXNzb2NpYXRlZCBjYXRlZ29yaWVzIHNvIHRoYXQgd2UgaGF2ZSBhIG1vcmUgaW50ZWxsaWdpYmxlIG9iamVjdCB0b1xyXG4gICAgICAgICAgICAvLyB1c2UgaW4gb3VyIHZpZXcuXHJcbiAgICAgICAgICAgIGZ1bmN0aW9uIHBvcHVsYXRlQ2F0ZWdvcmllcygpIHtcclxuXHJcbiAgICAgICAgICAgICAgICBfLmZvckVhY2goIHZtLmdhbWVEYXRhLmNhdGVnb3JpZXMsIGZ1bmN0aW9uIChjYXRlZ29yeSkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeS5xdWVzdGlvbnMgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbW9uZXkgPSAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGkgPSAxO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICBfLmZvckVhY2godm0uZ2FtZURhdGEucXVlc3Rpb25zLCBmdW5jdGlvbiAocXVlc3Rpb24pIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChxdWVzdGlvbi5jYXRlZ29yeV9pZCA9PT0gY2F0ZWdvcnkuX2lkKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9Bc3NpZ24gbW9uZXRhcnkgdmFsdWUgdG8gZWFjaCBxdWVzdGlvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb24ubW9uZXkgPSAobW9uZXkgKiBpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeS5xdWVzdGlvbnMucHVzaChxdWVzdGlvbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpKys7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgdm0uY2F0ZWdvcmllcy5wdXNoKGNhdGVnb3J5KTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codm0uY2F0ZWdvcmllcyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZtLnNlbGVjdFF1ZXN0aW9uID0gZnVuY3Rpb24gKHF1ZXN0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICB2bS5zZWxlY3RlZFF1ZXN0aW9uID0gcXVlc3Rpb247XHJcbiAgICAgICAgICAgICAgICBKZW9wYXJkeS5zZWxlY3RRdWVzdGlvbihxdWVzdGlvbik7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2bS50b2dnbGVTaG93QW5zd2VyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdm0uc2VsZWN0ZWRRdWVzdGlvbi5zaG93QW5zd2VyID0gISh2bS5zZWxlY3RlZFF1ZXN0aW9uLnNob3dBbnN3ZXIpO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0ucmV0dXJuVG9HYW1lYm9hcmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBKZW9wYXJkeS5yZXR1cm5Ub0dhbWVib2FyZCgpO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgdm0uYnV0dG9uQ2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnSGVsbG8nKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9KTtcclxuXHJcbn0oKSk7IiwiLyoqXHJcbiAqIENyZWF0ZWQgYnkgTmVpbCBTdHJhaW4gb24gNC8yOC8yMDE2LlxyXG4gKi9cclxuXHJcbihmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGFuZ3VsYXIubW9kdWxlKCdqZW9wYXJkeUFwcCcpXHJcbiAgICAgICAgLnNlcnZpY2UoJ0plb3BhcmR5JywgZnVuY3Rpb24gKCRodHRwKSB7XHJcblxyXG4gICAgICAgICAgICB2YXIgdm0gPSB0aGlzO1xyXG5cclxuICAgICAgICAgICAgdm0uZ2FtZURhdGEgPSBbXTtcclxuXHJcbiAgICAgICAgICAgIHZtLmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0R2FtZURhdGEoKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIHN1Y2Nlc3NDYWxsYmFjayhyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdm0uZ2FtZURhdGEgPSByZXMuZGF0YTtcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiBlcnJvckNhbGxiYWNrKGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ1RoZXJlIHdhcyBhbiBlcnJvciByZXRyaWV2aW5nIGdhbWUgZGF0YS4nKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0R2FtZURhdGEoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCdnZXQtY2F0ZWdvcmllcycpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAgICAgdm0uc2VsZWN0UXVlc3Rpb24gPSBmdW5jdGlvbiAocXVlc3Rpb24pIHtcclxuICAgICAgICAgICAgICAgIHF1ZXN0aW9uLnNlbGVjdGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICAgICAgICBDdXN0b21ib3gub3Blbih7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiAnI21vZGFsJyxcclxuICAgICAgICAgICAgICAgICAgICBlZmZlY3Q6ICdwdXNoJ1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICB2bS5yZXR1cm5Ub0dhbWVib2FyZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIEN1c3RvbWJveC5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICB9KTtcclxuXHJcblxyXG59KCkpO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
